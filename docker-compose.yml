version: "3.2"
services:
  mysql:
    image: percona:ps-8.0
    platform: linux/amd64
    ports:
      - "127.0.0.1:3306:3306"
    volumes:
      #uncomment line below to persist storage when downing and upping the container
      #- /tmp/godycdn_db/mysql:/var/lib/mysql
      # get the script from the gody-cdn repo https://raw.githubusercontent.com/OdyseeTeam/gody-cdn/master/db-init.sql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - MYSQL_USER=godycdn
      - MYSQL_PASSWORD=godycdn
      - MYSQL_DATABASE=godycdn
      - MYSQL_ROOT_PASSWORD=godycdnrootpw
  lbrynet:
    image: 'lbry/lbrynet-tv:0.101.2'
    labels:
      com.centurylinklabs.watchtower.enable: 1
    ports:
      - "5279:5279"
  player:
    image: 'odyseeteam/player-server:latest'
    logging:
      driver: "json-file"
      options:
        max-size: "1M"
        max-file: "3"
    labels:
      com.centurylinklabs.watchtower.enable: true
    ports:
      - "8080:8080"
      - "5567:5567"
      - "5569:5569"
      - "5568:5568/udp"
      - "5568:5568/tcp"
    #mem_limit: 28597m
    volumes:
      - "/tmp/reflector_cache:/tmp/player_cache"
      - "/tmp/reflector_cache:/tmp/transcoded_cache"
      - "/tmp/objects_cache:/tmp/objects"
      - "./config.json:/app/config.json"
    entrypoint: >
      ./odysee_player
      --lbrynet=http://lbrynet:5279
      --upstream-reflector=reflector.lbry.com:5569
      --upstream-protocol=http
      --bind=0.0.0.0:8080
      --prefetch=true
      --hot-cache-size=100MB
      --profile=true
      --config-username=test
      --config-password=test
      --throttle-scale=3.0
      --throttle-enabled=false
      --transcoder-video-path=/tmp/transcoded_cache
#      --disk-cache-dir="/tmp/player_cache"
#      --disk-cache-size=1GB
    environment:
      - SPACE_USE_DB=true
      - PLAYER_NAME=test-player
      - GOGC=60
    depends_on:
      - lbrynet
      - mysql
  watchtower:
    image: 'containrrr/watchtower'
    command: "--interval 30 --cleanup --label-enable"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
